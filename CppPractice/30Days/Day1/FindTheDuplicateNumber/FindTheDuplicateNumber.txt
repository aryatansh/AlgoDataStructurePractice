Question:
Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.

Example 1:

Input: nums = [1,3,4,2,2]
Output: 2
Example 2:

Input: nums = [3,1,3,4,2]
Output: 3
Example 3:

Input: nums = [1,1]
Output: 1
Example 4:

Input: nums = [1,1,2]
Output: 1
 

Constraints:

2 <= n <= 105
nums.length == n + 1
1 <= nums[i] <= n
All the integers in nums appear only once except for precisely one integer which appears two or more times.
 

Follow up:

How can we prove that at least one duplicate number must exist in nums?
Can you solve the problem in linear runtime complexity?


Solution:
1) Sort the array and find the adjacent numbers which are same.
2) Put the array into a set and check if it already exist.
3) Floyd Cycle Detection:-
    a) In floyd Cycle Detection we check if the loop exist or not.
        - We create two pointers. 1st pointer jump 1 node(tortoise), 2nd pointer jump 2 nodes(hare). If two pointer meet at some point if the cycle exist.
        - Once cycle is found we move to next step.
    b) 1st pointer is now moved to start of the array or list , 2nd pointer now moves only one node from where it is currently present.
    c) The place where both the pointers are met is the number where cycle started. See proof below.

Proof:-

-The pointer which jump only one node is called tortoise.
-The pointer which jump two nodes is called hare.

Distance between the point from where the list starts to the point where cycle start is x and the diameter of circle is suppose (y+z) where why is the point from circle starting point where both the pointers met.

In this case the Distance completed by both the pointers are

tortoise:- x+y;
hare:- x+m(y+z)+y - where m is the number of times the hare has completed the circle.

Since the time taken by two pointers are same (Distance/speed) and speed of hare is twice as fast as tortoise.

=> (x+y)/s=(x+m(y+z)+y)/2s
=> x+y=m(y+z)
=> x+y=(m-1)(y+z)+y+z;
=> x=(m-1)(y+z)+z
where x is the distance tortoise moved from the 1st position and z is the distance hare moved in circle after completing circle

